JS Introduction

Question 1: Input and Output.
--------------------------------

var a =readLine()
console.log("Hello", a);

Question 2: var vs let vs const
----------------------------------

-10

Question 3: Datatypes And Type Casting
-----------------------------------------

var a = readLine()
var b=Number(a)
console.log(b+1);

--------------------------------------------------------------------------------------------------------------------------

Flow Control

Question 1: Comparision Operation & If-Else
----------------------------------------------

var num = readLine().trim();
if(num>=90){
    console.log("A");
}
else if(num>=80){
    console.log("B");
}
else if(num>=70){
    console.log("C");
}
else if(num>=60){
    console.log("D");
}
else if(num>=50){
    console.log("E");
}
else{
    console.log("F")
}

Question 2: Switch Statement
---------------------------------

var num = parseInt(readLine().trim());
switch(num){
    case 1:
        console.log("Monday");
        break;
    case 2:
        console.log("Tuesday");
        break;
    case 3:
        console.log("Wednesday");
        break;
    case 4:
        console.log("Thursday");
        break;
    case 5:
        console.log("Friday");
        break;
    case 6:
        console.log("Saturday");
        break;
    default:
        console.log("Sunday");
        break;
}



Question 3: Loops
--------------------

var num = parseInt(readLine().trim());
for(i=0;i<=num;i++){
    if(i%2!=0){
    console.log(i);
    }
}

Question 4: Jump Statements
-------------------------------

var num = parseInt(readLine().trim());
for(i=0;i<=num;i++){
  if(i%2==0){
    continue;
    }
    console.log(i);
}

------------------------------------------------------------------------------------------------------------------

Numbers And Their Methods


Question 1: Arithmetic Operations on Numbers
-----------------------------------------------

var n = parseInt(readLine().trim());
console.log((n*n)+(n**3)-n);


Question 2: Math methods in JS
------------------------------------

var num = parseInt(readLine().trim());
var b=Math.log2(num)
console.log(Math.round(b))

Question 3: Bits and operations on it
-----------------------------------------

var num = parseInt(readLine().trim());
console.log(~num);

------------------------------------------------------------------------------------------------------------------

Strings and strings Methods


Question 1: JavaScript Strings
---------------------------------

var string = readLine().trim();
var output = string+string.length
console.log(output);


Question 2: String Methods
--------------------------------

var name = readLine().trim();
var uppername = name.toUpperCase();
var output = name.concat(uppername)
console.log(output)


Question 3: Regex in JS

var Str = readLine().trim();
var patt = readLine().trim();
var regpat = new RegExp(patt, "i");
console.log(regpat.test(Str));

--------------------------------------------------------------------------------------------------------------------

Arrays and Objects

Question 1: Arrays in JS
----------------------------

var size_ = parseInt(readLine().trim());
var array_ = []
for(var i = 0 ; i < size_; i++ ){
    var x = parseInt(readLine().trim());
    array_.push(x);
}
var new_array = []
for(i=0; i<size_; i++){
    new_array.push(array_[i]+i);
    console.log(new_array[i])
}


Question 2: Basic Array Methods
-----------------------------------

var size1 = parseInt(readLine().trim());
var A = []
for(var i = 0 ; i < size1; i++ ){
    var x = parseInt(readLine().trim());
    A.push(x);
}
var size2 = parseInt(readLine().trim());
var B = []
for(var i = 0 ; i < size2; i++ ){
    var x = parseInt(readLine().trim());
    B.push(x);
}

a1=A.shift();
var b1=B.push(a1);
var output = A.concat(B);
for(i=0;i<output.length;i++){
    console.log(output[i]);
}


Question 3: More Useful Array Methods
------------------------------------------

var size_ = parseInt(readLine().trim());
var array_ = []
for(var i = 0 ; i < size_; i++ ){
    var x = parseInt(readLine().trim());
    array_.push(x);
}
var output = array_.sort(function(a,b){return a-b});
for(i=0;i<output.length;i++){
    console.log(output[i])
}


Question 4: Map and Filter Methods
------------------------------------

var size_ = parseInt(readLine().trim());
var A = []
for(var i = 0 ; i < size_; i++ ){
    var x = parseInt(readLine().trim());
    A.push(x);
}
var B = A.map(func)
function func(num){
    return num*2;
}
var C = B.filter(func1)
function func1(i){
    if(i%8==0)
    return i;
}
for(i=0;i<C.length;i++){
    console.log(C[i])
}


Question 5: Js Objects
------------------------

/*
var Stud = new Object();
Stud.Maths = parseInt(readLine().trim());
Stud.Physics = parseInt(readLine().trim());
Stud.Chemistry = parseInt(readLine().trim());
*/

if(Stud.Maths>Stud.Physics && Stud.Maths>Stud.Chemistry){
    console.log("Maths");
}
else if(Stud.Physics>Stud.Maths && Stud.Physics>Stud.Chemistry){
    console.log("Physics");
}
else{
    console.log("Chemistry");
}


-------------------------------------------------------------------------------------------------------

Functions And Parameters

Question 1: Functions in JS
------------------------------

var a = parseInt(readLine().trim());
var b = parseInt(readLine().trim());
var c = parseInt(readLine().trim());
function myFunction(a,b,c){
    return a*b*c;
}
var z = myFunction(a,b,c);
console.log(z);


Question 2: Global Vs Local
-------------------------------

a) Scope determines the accessibility of variables, objects, and functions from different parts of the code.
b) Function arguments (parameters) work as local variables inside functions.
c) We can use variables with same name inside multiple fucntions.


Question 3: Nested Functions
-------------------------------

8

--------------------------------------------------------------------------------------------------------------------------

OOPs


Question 1: Classes And Their Instances
-----------------------------------------

var defaultName = readLine();  
var defaultPosition = readLine();
var defaultSkill = readLine();

class Employee{
    constructor(name,position,skill){
        this.name=name;
        this.position=position;
        this.skill=skill;
    }
}

Question 2: Class Inheritance
--------------------------------

class A{
    constructor(x, y){
        this.x = x;
        this.y = y;
    }   
}
class B extends A{
    constructor(x,y,z){
        super(x,y);
        this.z=z;
    }
    printIB(){
        console.log("IB")
    }

}

let x = readLine();
let y = readLine();
let z = readLine();



Question 3: Polymorphism
--------------------------

class Shape{
    area() {
        return 0;
        
    }
    print() {
        console.log("This is a shape.");
    }
}

class Square extends Shape{
    constructor(s) {
        super();
        this.s = s;
    }
    area(){
        return s*s;
        
    }
}

class Rectangle extends Shape{
    constructor(l, b) {
        super();
        this.l = l;
        this.b = b;
    }

    area() {
        return l*b;
    }
}


----------------------------------------------------------------------------------------------------------------------------------
